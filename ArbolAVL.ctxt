#BlueJ class context
comment0.target=ArbolAVL
comment1.params=
comment1.target=ArbolAVL()
comment10.params=y
comment10.target=NodoAVL\ RotacionDer(NodoAVL)
comment11.params=nodo
comment11.target=NodoAVL\ RotacionIzqDer(NodoAVL)
comment12.params=nodo
comment12.target=NodoAVL\ RotacionDerIzq(NodoAVL)
comment13.params=nodo
comment13.target=int\ DetAltura(NodoAVL)
comment14.params=valor
comment14.target=boolean\ BuscarPeliculaPorDuracion(long)
comment15.params=valor\ nodo
comment15.target=boolean\ BuscarValorD(long,\ NodoAVL)
comment16.params=valor
comment16.target=boolean\ BuscarPeliculaPorNombre(java.lang.String)
comment17.params=valor\ nodo\ contador
comment17.target=boolean\ BuscarValorN(java.lang.String,\ NodoAVL,\ int)
comment18.params=valor\ nombrePelicula
comment18.target=boolean\ compararNombrePelicula(java.lang.String,\ java.lang.String)
comment19.params=texto
comment19.target=java.lang.String\ normalizarString(java.lang.String)
comment2.params=
comment2.target=boolean\ estaVacio()
comment20.params=valor
comment20.target=int\ BuscarPeliculaPorNombreCalcularNodos(java.lang.String)
comment21.params=valor\ nodo\ contador
comment21.target=int\ BuscarValorNCalcularNodos(java.lang.String,\ NodoAVL,\ int)
comment22.params=valor
comment22.target=int\ BuscarPeliculaPorDuracionCalcularNodos(long)
comment23.params=valor\ nodo\ contador
comment23.target=int\ BuscarValorDCalcularNodos(long,\ NodoAVL,\ int)
comment24.params=
comment24.target=void\ ImprimirEnOrden()
comment25.params=nodo
comment25.target=void\ imprimirEnOrdenDescendenteConRetraso(NodoAVL)
comment26.params=valor
comment26.target=void\ EliminarPorNombre(peliculas)
comment27.params=valor\ nodo
comment27.target=NodoAVL\ EliminarPorNombre(peliculas,\ NodoAVL)
comment28.params=nodo
comment28.target=NodoAVL\ EncontrarMinimo(NodoAVL)
comment29.params=duracion
comment29.target=void\ EliminarPorDuracion(long)
comment3.params=valor
comment3.target=void\ InsertarPorNombre(peliculas)
comment30.params=nodo\ duracion
comment30.target=NodoAVL\ EliminarNodoPorDuracion(NodoAVL,\ long)
comment31.params=nodo
comment31.target=NodoAVL\ balancear(NodoAVL)
comment32.params=cancion
comment32.target=void\ EliminarPorDuracion(peliculas)
comment33.params=pelicula\ nodo
comment33.target=NodoAVL\ EliminarPorDuracionRecursivo(peliculas,\ NodoAVL)
comment34.params=nodo
comment34.target=NodoAVL\ obtenerMinimo(NodoAVL)
comment4.params=
comment4.target=peliculas[]\ toArray()
comment5.params=nodo\ lista
comment5.target=void\ inOrden(NodoAVL,\ java.util.List)
comment6.params=valor\ nodo
comment6.target=NodoAVL\ GenerarNodoPorNombre(peliculas,\ NodoAVL)
comment7.params=valor
comment7.target=void\ InsertarPorDuracion(peliculas)
comment8.params=valor\ nodo
comment8.target=NodoAVL\ GenerarNodoPorDuracion(peliculas,\ NodoAVL)
comment9.params=x
comment9.target=NodoAVL\ RotacionIzq(NodoAVL)
numComments=35
